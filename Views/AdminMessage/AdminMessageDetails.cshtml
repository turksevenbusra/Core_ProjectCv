@model EntityLayer.Concrete.WriterMessage
@{
    ViewData["Title"] = "AdminMessageDetails";
    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
}


<div class="container">
    <div class="card">
        <div class="card-header bg-white text-black d-flex justify-content-between align-items-center">
            <span class="btn btn-rounded btn-outline-dark">
                <i class="mdi mdi-battery-charging-90"></i> Yazar -  Admin Detay Sayfası
            </span>
        </div>
        <div class="body">
            @using (Html.BeginForm("AdminMessageDetails", "AdminMessage", FormMethod.Get))
            {
                @Html.Label("ID")
                @Html.TextBoxFor(x => x.WriterUserId, new { @class = "form-control" })
                <br />

                @Html.Label("Konu")
                @Html.TextBoxFor(x => x.Subject, new { @class = "form-control" })
                <br />


                @Html.Label("Alıcı Adı ve Soyadı ")
                @Html.TextBoxFor(x => x.ReceiverName, new { @class = "form-control" })
                <br />
                @Html.Label("Gönderen Adı ve Soyadı")
                @Html.TextBoxFor(x => x.SenderName, new { @class = "form-control" })
                <br />

                @Html.Label("Tarih")
                @Html.TextBoxFor(x => x.Date, new { @class = "form-control" })
                <br />

                @Html.Label("Mesaj İçeriği")
                @Html.TextAreaFor(x => x.WriterContent, 10, 3, new { @class = "form-control" })
                <br />

                <a asp-action="SenderMessageList" class="btn btn-rounded btn-outline-warning"> Admin Gelen Mesajlar </a>
                <a asp-action="ReceiverMessageList" class="btn btn-rounded btn-outline-primary"> Admin Giden Mesajlar </a>
            }
        </div>
    </div>
</div>

